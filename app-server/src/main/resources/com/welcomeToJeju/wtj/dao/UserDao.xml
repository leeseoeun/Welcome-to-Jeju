<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.welcomeToJeju.wtj.dao.UserDao">
  
  <resultMap type="User" id="UserMap">
    <id column="user_no" property="no"/> 
    <result column="email" property="email"/>
    <result column="password" property="password"/>
    <result column="nickname" property="nickname"/>
    <result column="created_dt" property="registeredDate"/>
    <result column="emoji" property="emoji"/>
    <result column="view_cnt" property="viewCount"/>
    <result column="active" property="active"/>
  </resultMap>
  
  <!-- 유저 -->
  <insert id="insert" parameterType="User">
    insert into jeju_user(email,password,nickname,emoji)
    values(#{email},password(#{password}),#{nickname},#{emoji})
  </insert>
  
  <update id="update" parameterType="User">
    update jeju_user set
      email=#{email},
      password=password(#{password}),
      nickname=#{nickname},
      active=#{active},
      emoji=#{emoji}
    where
      user_no=#{no}
  </update>
  
  <delete id="delete" parameterType="int">
    delete from jeju_user
    where user_no=#{no}
  </delete>
  
  <!-- 로그인 -->
  <select id="findByEmailAndPassword" resultMap="UserMap">
    select
      user_no,
      email,
      nickname,
      created_dt,
      view_cnt,
      active,
      emoji
    from
      jeju_user
    where
      active=1 and email=#{email} and password=password(#{password})
  </select>
  
  <!-- 탈퇴 -->
  <update id="updateActive" parameterType="int">
    update jeju_user set
      active = 0
    where
      user_no=#{userNo}
  </update>
  
  <!-- 유저 목록 -->
  <select id="findAll" resultMap="UserMap">
    select
      user_no,
      email,
      nickname,
      created_dt,
      view_cnt,
      active,
      emoji
    from
      jeju_user
    order by
      user_no desc
  </select>
  
  <!-- 유저 검색 -->
  <select id="findByNo" resultMap="UserMap" parameterType="int">
    select
      user_no,
      email,
      nickname,
      created_dt,
      view_cnt,
      emoji
    from
      jeju_user
    where
      user_no=#{no}
  </select>
  
  <select id="findByEmail" resultMap="UserMap" parameterType="String">
	  select
	    user_no,
	    email,
	    nickname,
	    created_dt,
	    view_cnt,
	    emoji,
	    active
	  from
	    jeju_user
	  where
	    email=#{email}
  </select>
  
  <select id="findByNickname" resultMap="UserMap" parameterType="String">
    select
      user_no,
      email,
      nickname,
      created_dt,
      view_cnt,
      emoji
    from
      jeju_user
    where
      active=1 and nickname=#{nickname}
  </select>
  
  <select id="findByKeyword" resultMap="UserMap" parameterType="String">
    select
      user_no,
      email,
      nickname,
      created_dt,
      view_cnt,
      active,
      emoji
    from
      jeju_user
    where
      active=1 and nickname like(concat('%',#{keyword},'%'))
  </select>
  
  <!-- 좋아하는 유저 -->
  <insert id="insertLikeUser">
    insert into jeju_liked_user(user_no,liked_user_no)
    values(#{loginUserNo},#{likedUserNo})
  </insert>
  
  <delete id="deleteLikeUser">
    delete from jeju_liked_user
    where user_no=#{loginUserNo} and liked_user_no=#{likedUserNo}
  </delete>
  
  <delete id="deleteAllLikeUser" parameterType="int">
    delete from jeju_liked_user 
    where user_no=#{loginUserNo}
  </delete>
  
  <select id="findAllLikeUser" resultMap="UserMap" parameterType="int">
    select
      u.user_no,
      u.nickname,
      u.emoji
    from
      jeju_user u
      inner join jeju_liked_user lu on u.user_no=lu.liked_user_no
    where
      u.active=1 and lu.user_no=#{loginUserNo}
  </select>
  
  <!-- 순위 -->
  <update id="updateViewCount" parameterType="int">
    update jeju_user set
      view_cnt= view_cnt + 1
    where
      user_no=#{userNo}
  </update>
  
  <!-- 메인 -->
  <select id="userRanking10" resultMap="UserMap">
    select
      user_no,
      email,
      nickname,
      created_dt,
      view_cnt,
      active,
      emoji
    from
      jeju_user
    order by
      view_cnt desc
      limit 10
  </select>
  
</mapper>
